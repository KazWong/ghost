<launch>
  <arg name="ns" default=""/>
  <arg name="tf" default="false"/>
  <arg name="manual" default="false"/>
  <arg name="navigation" default="false"/>
  <arg name="rosbag" default="false"/>
  <arg name="gazebo" default="false"/>

  <!-- tf -->
  <arg name="robot" default=""/>
  <arg name="joint_pub" default="false"/>
  <arg name="shift_x" default="0.0"/>
  <arg name="shift_y" default="0.0"/>
  <arg name="shift_z" default="0.0"/>
  <!-- manual -->
  <arg name="keyboard" default="false"/>
  <arg name="joystick" default="false"/>
  <!-- navigation -->
  <arg name="use_amcl" default="true"/>
  <arg name="use_gmapping" default="false"/>
  <arg name="map_name" default=""/>
  <arg name="amcl_map_name" default=""/>
  <!-- rosbag -->
  <arg name="duration" default="10m"/>
  <arg name="split" default="12"/>
  <arg name="log_path" default="/tmp/log"/>
  <!-- gazebo -->
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="world_name" default="worlds/empty.world"/>

  <arg name="config_robot" default="$(find config_robot)"/>
	<arg name="config_env" default="$(find config_env)"/>
	<arg name="param" default=""/>

	<!-- Parameters -->
  <!-- Map -->
  <arg if="$(eval arg('map_name') != '')" name="map_file" default="$(arg config_env)/maps/$(arg map_name).yaml"/>
  <arg if="$(eval arg('amcl_map_name') != '')" name="amcl_map_file" default="$(arg config_env)/maps/$(arg amcl_map_name).yaml"/>
  <arg if="$(eval arg('amcl_map_name') == '')" name="amcl_map_file" default="$(arg config_env)/maps/$(arg map_name).yaml"/>
  <!-- robot config -->
  <rosparam if="$(eval arg('robot') != '')" file="$(arg config_robot)/urdf/$(arg robot).yaml" ns="move_base" />
  <arg name="config_urdf" default="$(arg config_robot)"/>
  <arg if="$(eval arg('param') != '')" name="config_param" default="$(arg config_robot)/nav_param/$(arg param)"/>


  <!-- tf -->
  <include if="$(arg tf)" file="$(find ghost)/launch/tf.launch">
    <arg name="ns" value="$(arg ns)"/>
    <arg name="config" value="$(arg config_urdf)"/>
    <arg name="robot" value="$(arg robot)"/>
    <arg name="joint_pub" value="$(arg joint_pub)"/>
    <arg name="shift_x" value="$(arg shift_x)"/>
    <arg name="shift_y" value="$(arg shift_y)"/>
    <arg name="shift_z" value="$(arg shift_z)"/>
  </include>

  <!-- manual -->
  <include if="$(arg manual)" file="$(find ghost)/launch/manual.launch">
    <arg name="ns" value="$(arg ns)"/>
    <arg name="config" value="$(arg config_param)"/>
    <arg name="keyboard" value="$(arg keyboard)"/>
    <arg name="joystick" value="$(arg joystick)"/>
  </include>

  <!-- navigation -->
  <include if="$(arg navigation)" file="$(find ghost)/launch/navigation.launch">
    <arg name="ns" value="$(arg ns)"/>
    <arg name="config" value="$(arg config_param)"/>
    <arg name="use_amcl" value="$(arg use_amcl)"/>
    <arg name="use_gmapping" default="$(arg use_gmapping)"/>
    <arg name="map_file" value="$(arg map_file)"/>
    <arg name="amcl_map_file" value="$(arg amcl_map_file)"/>
  </include>

  <!-- gazebo -->
  <include if="$(arg gazebo)" file="$(find ghost)/launch/empty_world.launch">
    <arg name="debug" default="$(arg debug)" />
    <arg name="gui" default="$(arg gui)" />
    <arg name="paused" default="$(arg paused)"/>
    <arg name="use_sim_time" default="$(arg use_sim_time)"/>
    <arg name="headless" default="$(arg headless)"/>
    <arg name="world_name" default="$(arg world_name)"/>
  </include>

  <!-- rosbag -->
  <node if="$(arg rosbag)" pkg="rosbag" type="record" name="log"
      args="record --split --duration=$(arg duration) --max-splits $(arg split) -o $(arg log_path)
      /tf
      /tf_static
      /scan
      /amcl/parameter_descriptions
      /amcl/parameter_updates
      /amcl_pose
      /cmd_vel
      /map
      /map_metadata
      /move_base/EBandPlannerROS/eband_visualization
      /move_base/EBandPlannerROS/eband_visualization_array
      /move_base/EBandPlannerROS/global_plan
      /move_base/EBandPlannerROS/local_plan
      /move_base/EBandPlannerROS/parameter_descriptions
      /move_base/EBandPlannerROS/parameter_updates
      /move_base/NavfnROS/plan
      /move_base/cancel
      /move_base/current_goal
      /move_base/feedback
      /move_base/global_costmap/costmap
      /move_base/global_costmap/costmap_updates
      /move_base/global_costmap/footprint
      /move_base/global_costmap/inflation_layer/parameter_descriptions
      /move_base/global_costmap/inflation_layer/parameter_updates
      /move_base/global_costmap/obstacle_layer/parameter_descriptions
      /move_base/global_costmap/obstacle_layer/parameter_updates
      /move_base/global_costmap/parameter_descriptions
      /move_base/global_costmap/parameter_updates
      /move_base/global_costmap/static_layer/parameter_descriptions
      /move_base/global_costmap/static_layer/parameter_updates
      /move_base/goal
      /move_base/local_costmap/costmap
      /move_base/local_costmap/costmap_updates
      /move_base/local_costmap/footprint
      /move_base/local_costmap/inflation_layer/parameter_descriptions
      /move_base/local_costmap/inflation_layer/parameter_updates
      /move_base/local_costmap/obstacle_layer/parameter_descriptions
      /move_base/local_costmap/obstacle_layer/parameter_updates
      /move_base/local_costmap/parameter_descriptions
      /move_base/local_costmap/parameter_updates
      /move_base/parameter_descriptions
      /move_base/parameter_updates
      /move_base/result
      /move_base/status
      /move_base_simple/goal
      /odom
      /particlecloud
      /pc2
      /record" />
</launch>
